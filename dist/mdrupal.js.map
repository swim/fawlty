{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","build.js","core/class/request.js","core/class/rest.js","core/queue.js","core/request.js"],"names":[],"mappings":"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","file":"mdrupal.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @file\n * build.js\n */\n\nvar mdrupal = {\n  user: {\n    token: m.prop(false)\n  },\n  request: require('./core/request.js'),\n  queue: require('./core/queue.js')\n}\n\nmodule.exports = mdrupal;","/**\n * @file\n * request.js\n *\n * m.request class wrapper for Drupal requests.\n *\n * @todo, support views; paging etc.\n * @todo, implement another cache system outside of process with settings defined by request.\n */\n\nclass Request {\n  constructor(options) {\n    this.response = [];\n    this.cache = [];\n\n    // Default settings\n    this.settings = options.settings ? options.settings : {};\n    this.settings.redrawTimeout = options.settings.redrawTimeout ? options.settings.redrawTimeout : 0;\n    this.settings.redrawPerQueue = options.settings.redrawPerQueue ? options.settings.redrawPerQueue : false;\n    this.settings.basePath = options.settings.basePath ? options.settings.basePath : '';\n\n    // Request params\n    this.params = options.data;\n    this.params.url = this.settings.basePath + this.params.url;\n\n    this.init();\n  }\n\n  init() {\n    this.process();\n  }\n\n  process() {\n    var index = this.cacheIndex(this.params.url, this.params.data);\n\n    if (!this.cache[index]) {\n      var completed = m.prop(false)\n      var complete = function(value) {\n        completed(true)\n\n        delete this.cache[index];\n        return value;\n      }.bind(this)\n\n      var background = this.params.background ? true : false;\n      var timeout = this.settings.redrawTimeout;\n\n      this.cache[index] = {\n        data: m.request(this.params).then(complete, complete).then(function(value) {\n          if (background) {\n            // (virtual) DOM renders too quick.\n            // Set minimum wait for redraw time.\n            setTimeout(function() {\n              m.redraw()\n            }, timeout)\n          }\n\n          return value;\n        }),\n        status: completed\n      };\n    }\n\n    this.response = this.cache[index];\n  }\n\n  cacheIndex(url, data) {\n    return JSON.stringify({url: url, query: data});\n  }\n}\n\nmodule.exports = Request;","/**\n * @file\n * rest.js\n *\n * Format request params for Drupal REST to parse.\n *\n * @todo, allow option to set auth type used.\n * @todo, check to ensure config is not already set.\n */\nimport Request from './request';\n\nclass Rest extends Request {\n  init() {\n    // Set REST defaults\n    var format = this.settings.format ? this.settings.format : 'json';\n    this.params.url += '?_format=' + format;\n\n    // Set basic HTTP auth.\n    this.params.config = function(xhr) {\n      xhr.setRequestHeader('Authorization', '');\n    }\n\n    super.process();\n  }\n}\n\nmodule.exports = Rest;","/**\n * @file\n * queue.js\n *\n * Provides util functionality for queuing requests.\n *\n * @todo, provide easy entity loading; prefil values.\n * @todo, support per request options; currently per queue.\n */\nvar request = require('./request.js');\n\nvar queue = (function() {\n  var vm = {};\n\n  vm.queue = function(requests, options) {\n    var response = [];\n\n    for (var i = 0; i < requests.length; i++) {\n      response.push(request(requests[i], options));\n    }\n\n    return response;\n  }\n\n  return vm;\n}())\n\nmodule.exports = queue.queue;","/**\n * @file\n * request.js\n *\n * Abstracts the request response.\n */\nimport Rest from './class/rest';\n\nvar request = (function() {\n  var vm = {\n    lock: m.prop(false)\n  };\n\n  vm.request = function(request, options) {\n    var params = {\n      data: request,\n      settings: options ? options : {}\n    };\n\n    // check for CSRF token; otherwise request one.\n    if (!vm.lock() && !mdrupal.user.token()) {\n      vm.lock(true)\n\n      new Rest({\n        data: {\n          method: 'GET',\n          url: '/rest/session/token',\n          extract: function(xhr) {\n            var token = xhr.responseText;\n  \n            if (xhr.status == 200) {\n              token = JSON.stringify(xhr.responseText);\n            }\n\n            // Set CSRF token.\n            return mdrupal.user.token(token);\n          }\n        },\n        settings: {\n          format: ''\n        }\n      });\n    }\n\n    return new Rest(params).response;\n  }\n\n  return vm;\n}())\n\nmodule.exports = request.request;"]}